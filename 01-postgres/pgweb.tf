
# -------------------------------------------------------------------------------------------------
# CREATE A NETWORK INTERFACE (NIC) FOR THE VIRTUAL MACHINE TO ATTACH TO THE VIRTUAL NETWORK
# -------------------------------------------------------------------------------------------------
resource "azurerm_network_interface" "pgweb-vm-nic" {
  name                = "pgweb-vm-nic"                         # Name of the NIC resource in Azure
  location            = var.project_location                   # Must match the region of the resource group
  resource_group_name = azurerm_resource_group.project_rg.name # Reference to the existing resource group

  ip_configuration {
    name                          = "internal"
    subnet_id                     = azurerm_subnet.vm-subnet.id
    private_ip_address_allocation = "Dynamic"
    public_ip_address_id          = azurerm_public_ip.pgweb_vm_public_ip.id
  }
}

# -------------------------------------------------------------------------------------------------
# CREATE A LINUX VIRTUAL MACHINE AND ASSOCIATE IT WITH THE NIC DEFINED ABOVE
# -------------------------------------------------------------------------------------------------
resource "azurerm_linux_virtual_machine" "pgweb-vm" {
  name                = "pgweb-vm"                             # Name of the VM shown in Azure Portal
  location            = var.project_location                   # Must match location of NIC and RG
  resource_group_name = azurerm_resource_group.project_rg.name # Same resource group as NIC

  size           = "Standard_B1s"                     # VM size (1 vCPU, 1 GB RAM â€” barebones)
  admin_username = "sysadmin"                         # Login username (SSH or password)
  admin_password = random_password.vm_password.result # Secure password generated by random_password resource

  disable_password_authentication = false # REQUIRED if using password auth; set true for SSH-only

  # ----------------------------------------
  # ATTACH THE VM TO THE NETWORK INTERFACE(S)
  # ----------------------------------------
  network_interface_ids = [
    azurerm_network_interface.pgweb-vm-nic.id # Link the previously defined NIC
  ]

  # --------------------------
  # CONFIGURE THE OS DISK
  # --------------------------
  os_disk {
    caching              = "ReadWrite"    # Enable disk caching (improves performance)
    storage_account_type = "Standard_LRS" # Use Standard Locally Redundant Storage (cheaper, slower)
  }

  # ------------------------------------------
  # SPECIFY UBUNTU IMAGE FROM AZURE MARKETPLACE
  # ------------------------------------------
  source_image_reference {
    publisher = "canonical"        # Canonical = Ubuntu maintainer
    offer     = "ubuntu-24_04-lts" # Offer = Ubuntu 24.04 LTS release
    sku       = "server"           # Server edition
    version   = "latest"           # Always pull the latest available image
  }

  # ------------------------------------------------------
  # Pass custom data (cloud-init) to the VM at creation
  # ------------------------------------------------------

  custom_data = base64encode(templatefile("./scripts/pgweb.sh.template", {
    PGPASSWORD = random_password.postgres_password.result
    PGENDPOINT = "postgres-instance-${random_string.suffix.result}.postgres.database.azure.com"
  }))

  depends_on = [azurerm_postgresql_flexible_server.postgres_instance]

}

resource "random_string" "suffix" {
  length  = 4
  upper   = false
  special = false
}

resource "azurerm_public_ip" "pgweb_vm_public_ip" {
  name                = "pgweb-vm-public-ip"
  location            = var.project_location
  resource_group_name = azurerm_resource_group.project_rg.name
  allocation_method   = "Static"
  sku                 = "Standard"
  domain_name_label   = "pgweb-${random_string.suffix.result}"
}